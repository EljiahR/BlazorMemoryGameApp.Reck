@page "/memorygame"
@rendermode InteractiveWebAssembly
@inject NavigationManager Navigation
@inject HttpClient Http

<PageTitle>Memory Game</PageTitle>

<h3 class="text-center">Memory Game</h3>

@if (cards.Count == 0)
{
	<p>Loading...</p>
}
else if (gameState == GameState.Menu)
{
	<InputText placeholder="Your name" @bind-Value="@currentPlayer" />
	<button @onclick="StartGame" class="btn btn-primary">Start</button>
	<table class="table">
		<thead>
			<tr>
				<th>Name</th>
				<th>Duration</th>
				<th>Date</th>
			</tr>
		</thead>
		<tbody>
			@if (scoreboardIsLoading)
			{
				<tr>
					<td>Loading...</td>
					<td>Loading...</td>
					<td>Loading...</td>
				</tr>
			} else if (!scoreboardIsLoading && scoreboard.Count == 0)
			{
				<tr>
					<td></td>
					<td>No results</td>
					<td></td>
				</tr>
			} else
			{
				@foreach (var log in scoreboard)
				{
					<tr>
						<td>@log.PlayerName</td>
						<td>@log.Duration.ToString(@"mm\:ss")</td>
						<td>@log.DatePlayed.ToString(@"MM/d")</td>
					</tr>
				}
			}
			
		</tbody>
	</table>
} else if (gameState == GameState.Play)
{
	
	<div>Time: @Time</div>
	<div class="row g-3">
		@foreach (var card in cards)
		{
			<div @onclick=@(() => SelectCardAsync(card)) style="height: 12rem;" class="col-4 card text-white bg-primary text-center">
				@if (card.Selected)
				{
					@card.Content
				}
			</div>
		}
	</div>
} else if(gameState == GameState.Result)
{
	<div>You Won!</div>
	<div>Your Time: @Time</div>
	<button @onclick="StartGame" class="btn btn-primary">Play Again?</button>
	<button @onclick=@(async () => await GoToMenu()) class="btn btn-primary">Return to menu</button>
} else
{
	<p>Error</p>
}



@code {


}
