@page "/"
@rendermode InteractiveWebAssembly
@inject NavigationManager Navigation
@inject HttpClient Http

<PageTitle>Memory Game</PageTitle>

<h3 class="text-center">Memory Game</h3>

@if (gameState == GameState.Menu)
{
	<div class="mb-1">
		<InputText placeholder="Your name" @bind-Value="currentPlayer" />
	</div>
	<div>
		<button @onclick="@(() => StartGame(Difficulty.Easy))" class="btn btn-primary">Easy</button>
		<button @onclick="@(() => StartGame(Difficulty.Medium))" class="btn btn-primary">Medium</button>
		<button @onclick="@(() => StartGame(Difficulty.Hard))" class="btn btn-primary">Hard</button>
	</div>
	<div class="mb-1">
		<h3>Show Score For </h3>
		<InputSelect @bind-Value=scoreboardDifficulty @bind-Value:after="GetScoresAsync">
			<option value="@Difficulty.Easy">Easy</option>
			<option value="@Difficulty.Medium">Medium</option>
			<option value="@Difficulty.Hard">Hard</option>
		</InputSelect>
	</div>
	<table class="table">
		<thead>
			<tr>
				<th>Name</th>
				<th>Duration</th>
				<th>Date</th>
			</tr>
		</thead>
		<tbody>
			@if (scoreboardIsLoading)
			{
				<tr>
					<td>Loading...</td>
					<td>Loading...</td>
					<td>Loading...</td>
				</tr>
			} else if (!scoreboardIsLoading && scoreboard.Count == 0)
			{
				<tr>
					<td></td>
					<td>No results</td>
					<td></td>
				</tr>
			} else
			{
				@foreach (var log in scoreboard)
				{
					<tr>
						<td>@log.PlayerName</td>
						<td>@log.Duration.ToString(@"mm\:ss")</td>
						<td>@log.DatePlayed.ToString(@"MM/d")</td>
					</tr>
				}
			}
			
		</tbody>
	</table>
} else if (gameState == GameState.Play)
{
	
	<div class="text-center@(timerIsRunning ? "" : " timer-stopped")">Time: @Time</div>
	<button class="btn btn-danger mb-1" @onclick="QuitGame">Quit</button>
	<div class="game-container @difficulty">
		
		@foreach (var card in cards)
		{
			<div @onclick=@(() => SelectCardAsync(card)) class="flip-card">
				<div class="@("flip-card-inner" + (card.Selected || card.ForceShow ? " flipped" : ""))">
					<div class="flip-card-front">@card.Content</div>
					<div class="flip-card-back"></div>
				</div>
				
			</div>
		}
	</div>
} else if(gameState == GameState.Result)
{
	<div>You Won!</div>
	<div>Your Time: @Time</div>
	<button @onclick="@(() => StartGame())" class="btn btn-primary">Play Again?</button>
	<button @onclick=@(async () => await GoToMenu()) class="btn btn-primary">Return to menu</button>
} else
{
	<p>Error</p>
}



@code {


}
